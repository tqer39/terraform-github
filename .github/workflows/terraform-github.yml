---
name: Terraform - GitHub

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: terraform-github-${{ github.run_id }}
  cancel-in-progress: true

env:
  AWS_ENV_NAME: portfolio

jobs:
  terraform-github:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: write # Required for update the repository
      deployments: write # Required for bobheadxi/deployments
      id-token: write # Required for aws-actions/configure-aws-credentials
      pull-requests: write # Required for bobheadxi/deployments
    steps:
      - uses: actions/checkout@v4

      - name: AWS Credential
        uses: ./.github/actions/aws-credential
        with:
          oidc-iam-role: arn:aws:iam::072693953877:role/portfolio-terraform-github-deploy

      - name: Generate GitHub App Token
        id: app_token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.GHA_APP_ID }}
          private-key: ${{ secrets.GHA_APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - uses: ./.github/actions/terraform-plan
        with:
          working-directory: ./terraform/src/repository
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_APPS_TOKEN: ${{ steps.app_token.outputs.token }}

      - name: Start Deployment
        if: github.ref == 'refs/heads/main'
        uses: bobheadxi/deployments@v1
        id: deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: ${{ env.AWS_ENV_NAME }}

      # NOTE: GitHub App では個人アカウントのリポジトリを作成することが仕様上不可能なので PAT を使用する。
      - uses: ./.github/actions/terraform-apply
        if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
        with:
          working-directory: ./terraform/src/repository
          GITHUB_TOKEN: ${{ secrets.TERRAFORM_GITHUB_TOKEN }}

      - name: Finish Deployment
        if: always() && github.ref == 'refs/heads/main'
        uses: bobheadxi/deployments@v1
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          env: ${{ steps.deployment.outputs.env }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
