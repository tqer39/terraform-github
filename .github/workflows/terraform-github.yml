name: Terraform - GitHub

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: terraform-github-${{ github.run_id }}
  cancel-in-progress: true

env:
  AWS_ACCOUNT_ID: "072693953877"
  AWS_ENV_NAME: portfolio
  OIDC_IAM_ROLE: portfolio-terraform-github-deploy

jobs:
  set-matrix:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/set-matrix
        id: set-matrix
        with:
          AWS_ENV_NAME: ${{ env.AWS_ENV_NAME }}

  terraform-github:
    needs: [set-matrix]
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: read
      deployments: write
      id-token: write
      pull-requests: write
    strategy:
      fail-fast: false
      matrix:
        directory: ${{ fromJson(needs.set-matrix.outputs.matrix )}}
    steps:
      - uses: actions/checkout@v4

      - name: AWS Credential
        uses: ./.github/actions/aws-credential
        with:
          oidc-iam-role: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/${{ env.OIDC_IAM_ROLE }}

      - uses: ./.github/actions/terraform-plan
        with:
          working-directory: ./terraform/src/${{ matrix.directory }}
          GITHUB_TOKEN: ${{ secrets.TERRAFORM_GITHUB_TOKEN }}

      - name: Start Deployment
        if: github.ref == 'refs/heads/main'
        uses: bobheadxi/deployments@v1
        id: deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: ${{ env.AWS_ENV_NAME }}

      - uses: ./.github/actions/terraform-apply
        if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
        with:
          working-directory: ./terraform/src/${{ matrix.directory }}
          GITHUB_TOKEN: ${{ secrets.TERRAFORM_GITHUB_TOKEN }}

      - name: Finish Deployment
        if: always() && github.ref == 'refs/heads/main'
        uses: bobheadxi/deployments@v1
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          env: ${{ steps.deployment.outputs.env }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
